# ResNet50 training configuration
model:
  name: resnet50
  pretrained: true
  num_classes: ${data.num_classes}
  dropout: 0.5

# Training hyperparameters
training:
  epochs: 100
  batch_size: 32
  learning_rate: 0.001
  weight_decay: 1e-4
  momentum: 0.9

# Loss function
loss:
  type: bce  # binary cross-entropy for multi-label
  pos_weight: null  # Auto-calculate based on class distribution

# Optimizer
optimizer:
  type: adam
  lr: ${train.training.learning_rate}
  weight_decay: ${train.training.weight_decay}
  betas: [0.9, 0.999]

# Learning rate scheduler
scheduler:
  type: cosine_annealing
  T_max: ${train.training.epochs}
  eta_min: 1e-6

# Data augmentation
augmentation:
  horizontal_flip: 0.5
  rotation: 15
  color_jitter:
    brightness: 0.2
    contrast: 0.2
    saturation: 0.2
    hue: 0.1
  normalize: true

# Early stopping
early_stopping:
  patience: 15
  monitor: val_loss
  mode: min
  min_delta: 0.001

# Checkpointing
checkpoint:
  save_top_k: 3
  monitor: val_f1_macro
  mode: max
  save_last: true

# Validation
validation:
  frequency: 1  # Validate every epoch
  threshold: 0.5  # Default threshold for binary classification